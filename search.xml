<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>公交车标价 公交车票价为5角。假设每位乘客只持有两种币值的货币：5角、1元。</title>
      <link href="/2023/01/13/%E5%81%87%E8%AE%BE%E6%AF%8F%E4%BD%8D%E4%B9%98%E5%AE%A2%E5%8F%AA%E6%8C%81%E6%9C%89%E4%B8%A4%E7%A7%8D%E5%B8%81%E5%80%BC%E7%9A%84%E8%B4%A7%E5%B8%81%EF%BC%9A5%E8%A7%92%E3%80%811%E5%85%83/"/>
      <url>/2023/01/13/%E5%81%87%E8%AE%BE%E6%AF%8F%E4%BD%8D%E4%B9%98%E5%AE%A2%E5%8F%AA%E6%8C%81%E6%9C%89%E4%B8%A4%E7%A7%8D%E5%B8%81%E5%80%BC%E7%9A%84%E8%B4%A7%E5%B8%81%EF%BC%9A5%E8%A7%92%E3%80%811%E5%85%83/</url>
      
        <content type="html"><![CDATA[<h1 id="公交车标价-公交车票价为5角。假设每位乘客只持有两种币值的货币：5角、1元。"><a href="#公交车标价-公交车票价为5角。假设每位乘客只持有两种币值的货币：5角、1元。" class="headerlink" title="公交车标价 公交车票价为5角。假设每位乘客只持有两种币值的货币：5角、1元。"></a>公交车标价 公交车票价为5角。假设每位乘客只持有两种币值的货币：5角、1元。</h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>公交车票价为5角。假设每位乘客只持有两种币值的货币：5角、1元。</p><p>再假设持有5角的乘客有m人，持有1元的乘客有n人。</p><p>由于特殊情况，开始的时候，售票员没有零钱可找。我们想知道这m+n名乘客以什么样的顺序购票则可以顺利完成购票过程。</p><p>显然，m &lt; n的时候，无论如何都不能完成，m &gt;&#x3D;n的时候，有些情况也不行。</p><p>比如，第一个购票的乘客就持有1元。</p><p>下面的程序计算出这m+n名乘客所有可能顺利完成购票的不同情况的组合数目。</p><p>注意：只关心5角和1元交替出现的次序的不同排列，持有同样币值的两名乘客交换位置并不算做一种新的情况来计数。</p><blockquote><p>&#x2F;&#x2F;m: 持有5角币的人数</p><p>&#x2F;&#x2F;n: 持有1元币的人数</p><p>&#x2F;&#x2F;返回：所有顺利完成购票过程的购票次序的种类数</p><p>int f(int m, int n)</p><p>{</p><p>​    if(m &lt; n) return 0;</p><p>​    if(n&#x3D;&#x3D;0) return 1;</p><p>​    return _______________________;</p><p>}</p></blockquote><h5 id="小贴士："><a href="#小贴士：" class="headerlink" title="小贴士："></a>小贴士：</h5><ul><li><ol><li>浮点的非精确比较。不能用&#x3D;&#x3D;</li></ol></li><li><p>a. 小于一个临界值</p></li><li><p>b. 转化为整数</p></li><li><ol start="2"><li>有理数的高精度表示,注意：舍入规则的细节,  有效数字位数</li></ol></li><li><p>3.有理数的整数分数表示法</p></li><li><ol start="4"><li>IEEE754 规则 特殊的有理数值</li></ol></li></ul><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><h5 id="有m个拿五毛的n个拿一块的（m-gt-x3D-n）时的排列次数等于-有m-1个拿五毛的n个拿一块的排列次数-有m个拿五毛的n-1个拿一块的排列次数"><a href="#有m个拿五毛的n个拿一块的（m-gt-x3D-n）时的排列次数等于-有m-1个拿五毛的n个拿一块的排列次数-有m个拿五毛的n-1个拿一块的排列次数" class="headerlink" title="有m个拿五毛的n个拿一块的（m&gt;&#x3D;n）时的排列次数等于  有m-1个拿五毛的n个拿一块的排列次数 + 有m个拿五毛的n-1个拿一块的排列次数"></a>有m个拿五毛的n个拿一块的（m&gt;&#x3D;n）时的排列次数等于  有m-1个拿五毛的n个拿一块的排列次数 + 有m个拿五毛的n-1个拿一块的排列次数</h5><p>对于此题，采用递归思想，我们可以从最后一个人购票开始考虑，假设（m+n-1）个人已经买好票了，对于第m+n个人他有两种买票情况，持5角买票，或持1元买票，因此得到关系式<strong>solve(m-1,n)<strong>或</strong>solve(m,n-1)</strong>,f是购票函数，而对于第（m+n-1）个人，因为已经假设此时（m+n-2）个人已买好票了，则其买票情况也有两种，持5角买票，或持1元买票，….，最后当第二个人买票时，他有两种买票情况，持5角买票，或持1元买票，最后直到第一个人，也同上述所述。</p><p>　　接下来，我们研究函数出口:</p><p>　　在买票过程中，如果m&lt;n，则一定买票失败，这是第一种递归出口，则直接return。</p><p>　　观察第二个人买票情况可以发现，如果他持的是5角(m&#x3D;1)，则第一个人一定持的是1元，因为m&gt;&#x3D;n,此时n一定为1，此时只有一种情况，…51，这是第二种递归出口，则count++，再执行return。</p><p>　   当买票的人中，持有的是1元的人都没有了，此时剩下的人都持有5角，则只有一种情况，…5555，才能使关系式成立,这是第三种递归出口，count++，再执行return。</p><p>程序如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span>  </span></span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(m &lt; n) <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//五毛的少于一块的  </span></span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//一块的为 0 了，只剩下五毛的  </span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">f</span>(m<span class="number">-1</span>, n) + <span class="built_in">f</span>(m, n<span class="number">-1</span>);<span class="comment">//f(m,n)=f(m-1,n)+f(m,n-1)  </span></span><br><span class="line">&#125;   <span class="comment">//有m个拿五毛的n个拿一块的（m&gt;=n）时的排列次数等于   有m-1个拿五毛的n个拿一块的排列次数+ 有m个拿五毛的n-1个拿一块的排列次数  </span></span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="type">int</span> m,n;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入拿五毛钱的人数：&quot;</span>);  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入拿一块钱的人数：&quot;</span>);  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);  </span><br><span class="line">    <span class="type">int</span> re = <span class="built_in">f</span>(m,n);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;所有顺利完成购票过程的购票次序的种类数:%d\n&quot;</span>,re);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://i.328888.xyz/2023/01/13/wBAzE.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wBAzE.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="运行结果"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猜年龄</title>
      <link href="/2023/01/13/%E7%8C%9C%E5%B9%B4%E9%BE%84/"/>
      <url>/2023/01/13/%E7%8C%9C%E5%B9%B4%E9%BE%84/</url>
      
        <content type="html"><![CDATA[<h2 id="猜年龄"><a href="#猜年龄" class="headerlink" title="猜年龄"></a>猜年龄</h2><h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>美国数学家维纳(N.Wiener)智力早熟，11岁就上了大学。他曾在1935~1936年应邀来中国清华大学讲学。</p><p>  一次，他参加某个重要会议，年轻的脸孔引人注目。于是有人询问他的年龄，他回答说：</p><p> “<strong>我年龄的立方是个4位数。我年龄的4次方是个6位数。这10个数字正好包含了从0到9这10个数字，每个都恰好出现1次。”</strong></p><p>  请你推算一下，他当时到底有多年轻。</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>因为已知年龄的立方是一个4位数字，所以可以推断年龄的范围在10到22之间，因此确定穷举范围为10到22。</p><p>如果年龄还满足“年龄的4次方是一个6位数”这个条件，则先计算年龄的立方值的每一位数字，从低位到高位分别保存到变量b1,b2,b3,b4</p><p>中，再计算年龄的4次方值的每一位数字，从低位到高位分别保存到变量a1,a2,a3,a4,a5,a6中。如果上述10个数字互不相同，则必定是包</p><p>含了从0到9这10个数字并且每个都恰好出现1次，因此只要判断上述10个数字互不相同，即可确定这个年龄值为所求。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="built_in">guess</span>(<span class="type">int</span> *a,<span class="type">int</span> age) &#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">while</span>(age&gt;<span class="number">0</span>) &#123;</span><br><span class="line">i=age%<span class="number">10</span>;</span><br><span class="line">a[i]++;</span><br><span class="line">age=age/<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> i,j,flag;</span><br><span class="line"><span class="type">long</span> b1,b2;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">10</span>; i&lt;<span class="number">22</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">11</span>]= &#123;<span class="number">0</span>&#125;;</span><br><span class="line">b1=i*i*i;</span><br><span class="line">b2=b1*i;</span><br><span class="line"><span class="built_in">guess</span>(a,b1);</span><br><span class="line"><span class="built_in">guess</span>(a,b2);</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]!=<span class="number">1</span>) &#123; <span class="comment">//这里a[j]的值不为1则表示了0-9有的数未出现，有的不止出现一次</span></span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//当flag=1的时候代表这个i不满足0-9只出现一次</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;age=%d\n&quot;</span>,i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">flag=<span class="number">0</span>;<span class="comment">//这里是对flag 进行归零处理，当时我忘了处理，flag一直为1就起不了作为标志的作用。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://i.328888.xyz/2023/01/13/wpded.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wpded.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="结果截图"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有一群海盗（不多于20人），在船上比拼酒量。（穷举）</title>
      <link href="/2023/01/13/%E6%9C%89%E4%B8%80%E7%BE%A4%E6%B5%B7%E7%9B%97%EF%BC%88%E4%B8%8D%E5%A4%9A%E4%BA%8E20%E4%BA%BA%EF%BC%89%EF%BC%8C%E5%9C%A8%E8%88%B9%E4%B8%8A%E6%AF%94%E6%8B%BC%E9%85%92%E9%87%8F(%E7%A9%B7%E4%B8%BE)%20/"/>
      <url>/2023/01/13/%E6%9C%89%E4%B8%80%E7%BE%A4%E6%B5%B7%E7%9B%97%EF%BC%88%E4%B8%8D%E5%A4%9A%E4%BA%8E20%E4%BA%BA%EF%BC%89%EF%BC%8C%E5%9C%A8%E8%88%B9%E4%B8%8A%E6%AF%94%E6%8B%BC%E9%85%92%E9%87%8F(%E7%A9%B7%E4%B8%BE)%20/</url>
      
        <content type="html"><![CDATA[<h2 id="有一群海盗（不多于20人），在船上比拼酒量-穷举"><a href="#有一群海盗（不多于20人），在船上比拼酒量-穷举" class="headerlink" title="有一群海盗（不多于20人），在船上比拼酒量(穷举)"></a>有一群海盗（不多于20人），在船上比拼酒量(穷举)</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一群海盗（不多于20人），在船上比拼酒量。过程如下：打开一瓶酒，所有在场的人平分喝下，有几个人倒下了。再打开一瓶酒平分，又有倒下的，再次重复…… 直到开了第4瓶酒，坐着的已经所剩无几，海盗船长也在其中。当第4瓶酒平分喝下后，大家都倒下了。</p><p>  等船长醒来，发现海盗船搁浅了。他在航海日志中写到：“……昨天，<strong>我正好喝了一瓶</strong>…….奉劝大家，开船不喝酒，喝酒别开船……”</p><p>  请你根据这些信息，推断开始有多少人，每一轮喝下来还剩多少人。</p><p>  如果有多个可能的答案，请列出所有答案，每个答案占一行。</p><p>  格式是：人数,人数,…</p><p>  例如,有一种可能是：20,5,4,2,0</p><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p>这个船长喝了一整瓶才是问题关键。</p><p>让我们来总结一下信息如下：</p><p>海盗人数：≤20</p><p>第一轮倒下人数多于1 （第一轮至少剩余2人）</p><p>倒数第一轮倒下人数多于1 （倒数第一轮至少剩余2人）</p><p>每一轮剩余人数少于前一轮（至少有4+3+2&#x3D;9人）</p><p>喝酒轮数：4</p><p>船长正好喝了一瓶</p><p>问：开始多少人</p><p>每轮剩多少人</p><p>首先我们粗略确定的是海盗的人数在9~20人内，这个问题喝酒人数比较少，我决定采用设未知数的方法进行分析</p><p>设总人数为x，第一轮剩余人数为a、第二轮为b、第三轮为c，满足关系<code>1/x+1/a+1/b+1/c=1</code>即可。</p><p>进一步转化为编程思路就是按排列的方式寻找a、b、c满足<code>1/x+1/a+1/b+1/c=1</code>即可，若要按某种规律排列显然应该用循环来编写程序。</p><p>举例来说：当x&#x3D;20，可能的情况有：</p><blockquote><p>a b c</p><p>18 17 16</p><p>18 17 15</p><p>18 17 14</p><p>…</p><p>18 17 2</p><p>18 16 15</p></blockquote><p>以此类推，我们可以编写for循环:</p><h3 id="程序如下："><a href="#程序如下：" class="headerlink" title="程序如下："></a>程序如下：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> n;</span><br><span class="line">    <span class="type">float</span> a,b,c;</span><br><span class="line">    <span class="type">float</span> s1,s2,s3;</span><br><span class="line">    <span class="keyword">for</span>(n=<span class="number">5</span>; n&lt;=<span class="number">20</span>; n++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(a=<span class="number">1</span>; a&lt;n; a++)</span><br><span class="line">            <span class="keyword">for</span>(b=<span class="number">1</span>; b&lt;n; b++)</span><br><span class="line">                <span class="keyword">for</span>(c=<span class="number">1</span>; c&lt;n; c++)</span><br><span class="line">                &#123;</span><br><span class="line">                    s1=n-a;</span><br><span class="line">                    s2=n-a-b;</span><br><span class="line">                    s3=n-a-b-c;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="number">1</span>/n+<span class="number">1</span>/s1+<span class="number">1</span>/s2+<span class="number">1</span>/s3==<span class="number">1</span>&amp;&amp;s1&gt;<span class="number">0</span>&amp;&amp;s2&gt;<span class="number">0</span>&amp;&amp;s3&gt;<span class="number">0</span>)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%.0f %.0f %.0f %.0f 0\n&quot;</span>,n,s1,s2,s3);</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://i.328888.xyz/2023/01/13/wprhH.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wprhH.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="运行结果"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Ubuntu下用Hexo和github搭建个人博客（详解）</title>
      <link href="/2023/01/13/%E5%9C%A8Ubuntu%E4%B8%8B%E7%94%A8Hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E8%AF%A6%E8%A7%A3%EF%BC%89-1/"/>
      <url>/2023/01/13/%E5%9C%A8Ubuntu%E4%B8%8B%E7%94%A8Hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E8%AF%A6%E8%A7%A3%EF%BC%89-1/</url>
      
        <content type="html"><![CDATA[<h1 id="在Ubuntu下用Hexo和github搭建个人博客（详解）"><a href="#在Ubuntu下用Hexo和github搭建个人博客（详解）" class="headerlink" title="在Ubuntu下用Hexo和github搭建个人博客（详解）"></a>在Ubuntu下用Hexo和github搭建个人博客（详解）</h1><p>用Hexo和github配合，不用写代码就搭建一套属于自己的个人博客网站（小白也可以尝试）</p><p>Hero还提供了大量主题模版供用户下载。你的博客网站将可以时不时的换一种主题风格，赏心悦目，简直完美！</p><p>（一个属于你的世界！一个可供别人访问的个人世界）</p><blockquote><p>Hexo是一个基于 node.js的快速生成静态博客的开源框架,支持 Markdown和大多数 Octopress<br>插件,一个命令即可部署到 Github页面、 Giteee、 Heroku等,强大的APl,可无限扩展,拥有<br>数百个主题和插件。</p></blockquote><h3 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h3><p>​因为环境我已经安装过了，所以图片展示安装完成的结果。</p><h4 id="1-安装-node-js"><a href="#1-安装-node-js" class="headerlink" title="1.安装 node.js"></a>1.安装 node.js</h4><p><code>sudo apt-get install nodejs</code></p><p><img src="https://i.328888.xyz/2023/01/13/wcQFU.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wcQFU.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113180125853"></p><blockquote><p>使用apt按装方式可能不会安装nodejs的最新版，如需要用最新版可以到官网下载。</p></blockquote><h4 id="2-安装-git"><a href="#2-安装-git" class="headerlink" title="2.安装 git"></a>2.安装 git</h4><p><code>sudo apt-get install git-core</code></p><p><img src="https://i.328888.xyz/2023/01/13/wcYQv.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wcYQv.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113180424353"></p><h4 id="3-安装-npm"><a href="#3-安装-npm" class="headerlink" title="3.安装 npm"></a>3.安装 npm</h4><p><code>sudo apt-get install npm</code></p><p><img src="https://i.328888.xyz/2023/01/13/wmZxy.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmZxy.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113180611556"></p><h4 id="4-安装-Hexo"><a href="#4-安装-Hexo" class="headerlink" title="4.安装 Hexo"></a>4.安装 Hexo</h4><p><code>sudo npm install -g hexo-cli</code></p><h4 id="5-检查安装是否正确"><a href="#5-检查安装是否正确" class="headerlink" title="5.检查安装是否正确"></a>5.检查安装是否正确</h4><h5 id="依次输入查询版本命令，若正确显示版本号则表示环境安装成功"><a href="#依次输入查询版本命令，若正确显示版本号则表示环境安装成功" class="headerlink" title="依次输入查询版本命令，若正确显示版本号则表示环境安装成功"></a>依次输入查询版本命令，若正确显示版本号则表示环境安装成功</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">git version</span><br><span class="line"></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src="https://i.328888.xyz/2023/01/13/wmiL5.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmiL5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113181531919"></p><p><code>hexo -v</code></p><p><img src="https://i.328888.xyz/2023/01/13/wmycZ.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmycZ.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113181553428"></p><h3 id="二、环境初始化"><a href="#二、环境初始化" class="headerlink" title="二、环境初始化"></a>二、环境初始化</h3><h4 id="1-创建本地博客目录文件夹"><a href="#1-创建本地博客目录文件夹" class="headerlink" title="1.创建本地博客目录文件夹"></a>1.创建本地博客目录文件夹</h4><p><img src="https://i.328888.xyz/2023/01/13/wm4oF.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wm4oF.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113181845598"></p><p><code>cd my_blog</code>进入文件夹，使用<code>npm install</code>命令初始化安装npm</p><p>可以看到我们的hexo站点就已经安装好了，接下来就可以直接启动他了</p><img src="https://i.328888.xyz/2023/01/13/wmUjQ.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmUjQ.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113182130219" style="zoom:80%;" /><h4 id="2-启动本地服务站点"><a href="#2-启动本地服务站点" class="headerlink" title="2.启动本地服务站点"></a>2.启动本地服务站点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g </span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p><img src="https://i.328888.xyz/2023/01/13/wmnFE.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmnFE.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113182339740"></p><p>访问<a href="http://localhost:4000/">http://localhost:4000/</a> 至此hero就搭建好了。可以在本地访问了</p><p>下图是我更换了主题后的样式，后面会说到。</p><p><img src="https://i.328888.xyz/2023/01/13/wmtYC.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmtYC.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113182414153"></p><p>到这里我们的个人博客网站本地已经搭建完成，为了能让更多的人看到我们的网站，我们就需要将网站上传到github上。</p><blockquote><p>在国内访问github一直都不太稳定，大家遇到网络问题在所难免，多试几次。</p><p>或者不用github，改用gitte也是一样的操作，但gitee需要实名认证审核才能使用配置Pages服务。这里只说明github方法。</p></blockquote><h3 id="三、在GitHub上建站访问"><a href="#三、在GitHub上建站访问" class="headerlink" title="三、在GitHub上建站访问"></a>三、在GitHub上建站访问</h3><h4 id="1-新建guthub仓库"><a href="#1-新建guthub仓库" class="headerlink" title="1.新建guthub仓库"></a>1.新建guthub仓库</h4><p><strong>仓库名称限制了为你的：用户名+.github.io</strong></p><p>你必须要用这种格式为你的仓库命名</p><p>举例：<img src="https://i.328888.xyz/2023/01/13/wmklP.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmklP.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113185300068"></p><blockquote><p>一定要<strong>建立空仓库，不要有分支存在！！！</strong></p></blockquote><h4 id="2-安装-Hexo-上传插件"><a href="#2-安装-Hexo-上传插件" class="headerlink" title="2.安装 Hexo 上传插件"></a>2.安装 Hexo 上传插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="3、修改hexo配置文件指定仓库路径"><a href="#3、修改hexo配置文件指定仓库路径" class="headerlink" title="3、修改hexo配置文件指定仓库路径"></a>3、修改hexo配置文件指定仓库路径</h4><p>可在文件夹中直接打开文件，也可通过vim直接编辑</p><p>在博客文件夹的根目录下打开<code>_config.yml</code>,在最后修改geploy：部分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml </span><br><span class="line"><span class="comment">#找到（注意空格和对齐）修改如下：</span></span><br><span class="line">deploy:  </span><br><span class="line"><span class="built_in">type</span>: git  </span><br><span class="line">repo: 你的github仓库路径  </span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p><img src="https://i.328888.xyz/2023/01/13/wmCMt.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmCMt.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113184855722"></p><h4 id="4、推送站点到github"><a href="#4、推送站点到github" class="headerlink" title="4、推送站点到github"></a>4、推送站点到github</h4><p>推送命令(上传报错多位网络原因，多上传几次即可)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>推送过程中需要输入你的github用户名和密码。但是在2021年8月14日开始github官方就加强安全访问。不能通过原有账号密码git访问，密码需要用官方的token或者采用ssh公私钥访问。否则会出现：鉴权失败</p><p>所以我们需要获取到自己的仓库所需要的令牌token，当作密码进行操作。</p><blockquote><p>登录github设置setting-&gt;Developer Settings-&gt;Prosonal access tokens 创建一个新token。然后就可以拿这个token当密码输入了。</p></blockquote><p><img src="https://i.328888.xyz/2023/01/13/wmwnJ.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmwnJ.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113185336545"></p><p><img src="https://i.328888.xyz/2023/01/13/wm2cc.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wm2cc.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113185438815"></p><p><strong>在设置令牌时，名字随便取，期限建议直接永久，权限全选上。</strong></p><p><strong>密钥生成后保存下来，后期会频繁用到</strong></p><p>继续使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d  <span class="comment">#重新上传，上传过程中输入github的用户名和刚刚生成的密钥</span></span><br></pre></td></tr></table></figure><p>如果出现错误（没有则跳过）：<img src="https://i.328888.xyz/2023/01/13/wmHsA.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmHsA.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113190251115"></p><blockquote><p>在git创建项目时出现，<br>是因为在创建git文件夹的时候信息不完善导致的</p></blockquote><p>只需要Run</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span> <span class="comment">#注册github 的邮箱</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span> <span class="comment">#github用户名</span></span><br></pre></td></tr></table></figure><h4 id="5-推送完成尝试访问"><a href="#5-推送完成尝试访问" class="headerlink" title="5.推送完成尝试访问"></a>5.推送完成尝试访问</h4><p><img src="https://i.328888.xyz/2023/01/13/wmbfo.png" class="lazyload placeholder" data-srcset="https://i.328888.xyz/2023/01/13/wmbfo.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230113190708862"></p><p>输入你的仓库名称,即可访问成功。</p><p>尝试访问<a href="https://alexander798798.github.io/">https://alexander798798.github.io/</a></p><p>到这里我们的个人博客网页就算搭建完成了。下一步就是更换自己喜欢的主题和动手写第一篇自己的博客了。</p><p>感谢观看！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/13/hello-world/"/>
      <url>/2023/01/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
